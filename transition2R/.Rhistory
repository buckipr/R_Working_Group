library(flexdashboard)
require(knitr)
stataPath <- "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp"
predict(m1)
library(prediction)
prediction(m1)
m1 <- lm(prestige ~ educ*factor(occ_type), data = duncan)
# load and summarize the data
duncan <- read_dta('duncan.dta')
library(haven)
library(stargazer)
library(prediction)
library(margins)
# load and summarize the data
duncan <- read_dta('duncan.dta')
summary(duncan)
str(duncan$occ_type)
is.labelled(duncan$occ_type)
table(as_factor(duncan$occ_type), duncan$occ_type)
# fit the model and print the results
model1 <- lm(prestige ~ income + educ + factor(occ_type), data = duncan)
model1
# print even more results
summary(model1)
m1 <- lm(prestige ~ educ*factor(occ_type), data = duncan)
m1 <- lm(prestige ~ educ*factor(occ_type), data = duncan)
summary(m1)
prediction(m1)
p1 <- prediction(m1)
summary(p1)
table(duncan$occ_type)
p1 <- prediction(m1, at = list(occ_type) = c(1, 2, 3))
p1 <- prediction(m1, at = list(occ_type = c(1, 2, 3)))
summary(p1)
plot(p1)
summary(p1)
summary(m1)
str(p1)
library(haven)
library(stargazer)
library(prediction)
library(margins)
library(dotwhisker)
dwplot(p1)
names(p1)
colnames(p1)
colnames(p1)
summary(p1)
head(p1)
summary(p1)
jt <- summary(p1)
names(jt)
jt <- summary(p1)[, 1:5]
names(jt) <- c('term', 'estimate', 'std.error', 'statistic', 'p.value')
dwplot(jt)
jt
dwplot(jt, style="distribution")
yhat1 <- summary(p1)[, 1:5]
names(yhat1) <- c('term', 'estimate', 'std.error', 'statistic', 'p.value')
str(yhat1)
str(yhat1)
yhat1 <- summary(p1)[, 1:5]
names(yhat1) <- c('term', 'estimate', 'std.error', 'statistic', 'p.value')
yhat1$term <- c('Blue Collar', 'Professional', 'White Collar')
dwplot(yhat1)
yhat1[, 2]
# Stata uses a t-distribution: qt(0.975, df = n - df)
yhat1[, 2] + c(-1, 1)*qt(0.975, df = 39)*yhat1[, 3]
cbind(yhat1[, 2] - qt(0.975, df = 39) * yhat1[, 3],
yhat1[, 2] + qt(0.975, df = 39) * yhat1[, 3])
gradSchool <- read_dta('gradSchool.dta')
model1 <- glm(admit ~ gre + gpa + factor(rank), data = gradSchool,
family = binomial(link = "logit"))
summary(model1)
gradSchool <- read_dta('gradSchool.dta')
probit1 <- glm(admit ~ gre + gpa + factor(rank), data = gradSchool,
family = binomial(link = "probit"))
probit2 <- glm(admit ~ gre + gpa + f_rank, data = gradSchool,
family = binomial(link = "probit"))
# change reference category
gradSchool$f_rank <- factor(gradSchool$f_rank)
library(flexdashboard)
require(knitr)
stataPath <- "/Applications/Stata/StataMP.app/Contents/MacOS/stata-mp"
library(haven)
library(stargazer)
library(prediction)
library(margins)
library(dotwhisker)
library(MASS)
library(nnet)
# load and summarize the data
autoData <- read_dta('auto.dta')
N <- nrow(autoData)
## summary(autoData)
stargazer(data.frame(autoData), type='html', out = "descriptives.html",
summary.stat = c("mean", "sd", "min", "max"),
notes = paste("Number of observations =", N))
# open the file descriptives.html, then copy and paste to excel
getwd()
# load and summarize the data
autoData <- read_dta('auto.dta')
N <- nrow(autoData)
## summary(autoData)
stargazer(data.frame(autoData), type='html', out = "descriptives.html",
summary.stat = c("mean", "sd", "min", "max"),
notes = paste("Number of observations =", N))
# open the file descriptives.html, then copy and paste to excel
# load and summarize the data
duncan <- read_dta('duncan.dta')
# fit the model and print the results
model1 <- lm(prestige ~ income + educ + factor(occ_type), data = duncan)
model1
model1
summary(model1)
names(model1)
model1$coef
model1$residuals
plot(model1)
BIC(model1)
