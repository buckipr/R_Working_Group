}
points(csr_df[1,], col="red", pch=19, cex=1.5)
plot(csr_df, main="Distances in G Function", pch="n")
plot(csr_df, main="Distances in G Function", pch=0)
plot(csr_df, main="Distances in G Function", type="n")
crossdist(csr_df[1,1], csr_df[1,2], csr_df[2,1], csr_df[2,2])
csr_df
as.ppp(csr_df)
as.ppp(csr_df$x, csr_df$y)
ppp(csr_df$x, csr_df$y)
crossdiff(ppp(csr_df$x, csr_df$y))
crossdist(ppp(csr_df$x, csr_df$y))
crossdist(csr_df[1,], csr_df[2,]
)
crossdist(csr_df[1,], csr_df[2:50,])
ppp1 <- ppp(csr_df[1,1], csr_df[1,2])
ppp2 <- ppp(csr_df[2:50,1], csr_df[2:50,2])
crossdist(ppp1, ppp2)
ex1_ppp
ex1_ppp[1,]
nrow(ex1_ppp)
names(ex1_ppp)
ex1_ppp$n
csr_dist <- crossdist(ex1_ppp[1,], ex1_ppp[1:ex1_ppp$n,])
csr_dist <- crossdist(ex1_ppp[1,], ex1_ppp[1:ex1_ppp$n,])
csr_dist
dim(csr_dist)
csr_dist[1]
csr_dist[2]
csr_dist[3]
is.matrix(csr_dist)
dim(csr_dist)
dist
sort(csr_dist[-1])
sort(csr_dist)
seq(0, 1, by=.02)
seq(.02, 1, by=.02)
seq(.01, .99, by=.02)
1/49
x <- seq(0.01, .99, by=1/49)
x
x <- seq(0, .99, by=1/49)
x
x <- seq(0, .99, by=1/49)
csr_dist <- crossdist(ex1_ppp[1,], ex1_ppp[1:ex1_ppp$n,])
csr_dist <- sort(csr_dist)
y <- seq(0, .99, by=1/49)
plot(csr_df, main="Distances in G Function", type="n")
for (i in 2:nrow(csr_df)){
segments(x0=0, x1=csr_dist[i], y0=y[i], y1=y[i], col = "grey")
}
plot(ex1_g)
csr_dist
csr_df[1:2,]
d1 <- (csr_df[1,1] - csr_df[2,1])^2 + (csr_df[1,2] - csr_df[2,2])^2
d1
sqrt(d1)
ex1_g <- envelope(ex1_ppp, fun="Gest", nsim=99, nrank = 2)
plot(ex1_g)
Gest(ex1_ppp)
jt <- Gest(ex1_ppp)
names(jt)
jt$rs
jt$r
names(jt)
jt$km
cbind(jt$r, jt$km)
names(jt)
jt <- Gest(ex1_ppp, correction="none")
names(jt)
jt$raw
jt$r
nndist(ex1_ppp)
sort(nndist(ex1_ppp))
nnwhich(ex1_ppp)
crossdist(ex1_ppp[1,], ex1_ppp[31,])
plot(csr_df, main="Distances in G Function")
points(csr_df[1,], col="red", pch=1, cex=8)
points(csr_df[1,], col="red", pch=19, cex=1.5)
points(csr_df[2,], col="blue", pch=1, cex=8)
points(csr_df[2,], col="blue", pch=19, cex=1.5)
points(csr_df[3,], col="green", pch=1, cex=8)
points(csr_df[3,], col="green", pch=19, cex=1.5)
nn <- nnwhich(ex1_ppp)[1]
nn
plot(csr_df, main="Distances in G Function")
ppp_cols <- c("red", "blue", "green")
for (i in 1:3) {
points(csr_df[i,], col=ppp_cols[i], pch=1, cex=8)
points(csr_df[i,], col=ppp_cols[i], pch=19, cex=1.5)
nn <- nnwhich(ex1_ppp)[i]
segments(x0=csr_df[1,1], y0=csr_df[1,2], x1=csr_df[nn, 1], y1=csr_df[nn, 2], col=ppp_cols[i])
}
plot(csr_df, main="Distances in G Function")
ppp_cols <- c("red", "blue", "green")
for (i in 1:3) {
points(csr_df[i,], col=ppp_cols[i], pch=1, cex=8)
points(csr_df[i,], col=ppp_cols[i], pch=19, cex=1.5)
nn <- nnwhich(ex1_ppp)[i]
segments(x0=csr_df[i,1], y0=csr_df[i,2], x1=csr_df[nn, 1], y1=csr_df[nn, 2], col=ppp_cols[i])
}
nndist(ex1_ppp)
csr_dist <- sort(nndist(ex1_ppp))
y <- seq(0, .99, by=1/49)
plot(csr_df, main="Distances in G Function", type="n")
for (i in 2:nrow(csr_df)){
segments(x0=0, x1=csr_dist[i], y0=y[i], y1=y[i], col = "grey")
}
csr_dist <- sort(nndist(ex1_ppp))
y <- seq(0, .99, by=1/49)
plot(csr_df, main="Distances in G Function", x = "distance", y = "rank", type="n")
csr_dist <- sort(nndist(ex1_ppp))
y <- seq(0, .99, by=1/49)
plot(csr_df, main="Distances in G Function", xlab = "distance", ylab = "rank", type="n",
xlim = c(0, max(csr_dst)))
csr_dist <- sort(nndist(ex1_ppp))
y <- seq(0, .99, by=1/49)
plot(csr_df, main="Distances in G Function", xlab = "distance", ylab = "rank", type="n",
xlim = c(0, max(csr_dist)))
for (i in 2:nrow(csr_df)){
segments(x0=0, x1=csr_dist[i], y0=y[i], y1=y[i], col = "grey")
}
median(y)
ex1_ppp$n
ex1_ppp$n/2
csr_dist <- sort(nndist(ex1_ppp))
y <- seq(0, .99, by=1/49)
plot(csr_df, main="Distances to NE in G Function", xlab = "distance", ylab = "rank", type="n",
xlim = c(0, max(csr_dist)))
for (i in 2:nrow(csr_df)){
segments(x0=0, x1=csr_dist[i], y0=y[i], y1=y[i], col = "grey")
}
m <- round(ex1_ppp$n/2)
seqments(x0=0, x1=csr_dist[m], y0=y[m], y1=y[m], col = "red", lwd=2)
csr_dist <- sort(nndist(ex1_ppp))
y <- seq(0, .99, by=1/49)
plot(csr_df, main="Distances to NE in G Function", xlab = "distance", ylab = "rank", type="n",
xlim = c(0, max(csr_dist)))
for (i in 2:nrow(csr_df)){
segments(x0=0, x1=csr_dist[i], y0=y[i], y1=y[i], col = "grey")
}
m <- round(ex1_ppp$n/2)
segments(x0=0, x1=csr_dist[m], y0=y[m], y1=y[m], col = "red", lwd=2)
csr_dist <- sort(nndist(ex1_ppp))
y <- seq(0, .99, by=1/49)
plot(csr_df, main="Distances to NE in G Function", xlab = "distance", ylab = "rank", type="n",
xlim = c(0, max(csr_dist)))
for (i in 2:nrow(csr_df)){
segments(x0=0, x1=csr_dist[i], y0=y[i], y1=y[i], col = "grey")
}
m <- round(ex1_ppp$n/2)
segments(x0=-.1, x1=csr_dist[m], y0=y[m], y1=y[m], col = "red", lwd=2)
csr_dist <- sort(nndist(ex1_ppp))
y <- seq(0, .99, by=1/49)
plot(csr_df, main="Distances to NE in G Function", xlab = "distance", ylab = "rank", type="n",
xlim = c(0, max(csr_dist)))
for (i in 2:nrow(csr_df)){
segments(x0=0, x1=csr_dist[i], y0=y[i], y1=y[i], col = "grey")
}
m <- round(ex1_ppp$n/2)
segments(x0=-.1, x1=csr_dist[m], y0=y[m], y1=y[m], col = "red", lwd=2)
segments(x0=y[m], x1=y[m], y0=-.5, y1=csr_dist[m], col = "red", lwd=2)
y[m]
csr_dist[m]
csr_dist <- sort(nndist(ex1_ppp))
y <- seq(0, .99, by=1/49)
plot(csr_df, main="Distances to NE in G Function", xlab = "distance", ylab = "rank", type="n",
xlim = c(0, max(csr_dist)))
for (i in 2:nrow(csr_df)){
segments(x0=0, x1=csr_dist[i], y0=y[i], y1=y[i], col = "grey")
}
m <- round(ex1_ppp$n/2)
segments(x0=-.1, x1=csr_dist[m], y0=y[m], y1=y[m], col = "red", lwd=2)
segments(x0=csr_dist[m], x1=csr_dist[m], y0=-.5, y1=csr_dist[m], col = "red", lwd=2)
csr_dist <- sort(nndist(ex1_ppp))
y <- seq(0, .99, by=1/49)
plot(csr_df, main="Distances to NE in G Function", xlab = "distance", ylab = "rank", type="n",
xlim = c(0, max(csr_dist)))
for (i in 2:nrow(csr_df)){
segments(x0=0, x1=csr_dist[i], y0=y[i], y1=y[i], col = "grey")
}
m <- round(ex1_ppp$n/2)
segments(x0=-.1, x1=csr_dist[m], y0=y[m], y1=y[m], col = "red", lwd=2)
segments(x0=csr_dist[m], x1=csr_dist[m], y0=-.5, y1=y[m], col = "red", lwd=2)
csr_dist <- sort(nndist(ex1_ppp))
y <- seq(0, .99, by=1/49)
plot(csr_df, main="Distances to NE in G Function", xlab = "distance", ylab = "rank", type="n",
xlim = c(0, max(csr_dist)))
for (i in 2:nrow(csr_df)){
segments(x0=0, x1=csr_dist[i], y0=y[i], y1=y[i], col = "grey")
}
m <- round(ex1_ppp$n/2)
segments(x0=-.1, x1=csr_dist[m], y0=y[m], y1=y[m], col = "red", lwd=2)
segments(x0=csr_dist[m], x1=csr_dist[m], y0=-.5, y1=y[m], col = "red", lwd=2)
text(csr_dist[m], y[m], "median", col = "red")
csr_dist <- sort(nndist(ex1_ppp))
y <- seq(0, .99, by=1/49)
plot(csr_df, main="Distances to NE in G Function", xlab = "distance", ylab = "rank", type="n",
xlim = c(0, max(csr_dist)))
for (i in 2:nrow(csr_df)){
segments(x0=0, x1=csr_dist[i], y0=y[i], y1=y[i], col = "grey")
}
m <- round(ex1_ppp$n/2)
segments(x0=-.1, x1=csr_dist[m], y0=y[m], y1=y[m], col = "red", lwd=2)
segments(x0=csr_dist[m], x1=csr_dist[m], y0=-.5, y1=y[m], col = "red", lwd=2)
text(csr_dist[m], y[m], "median", col = "red", pos=2)
csr_dist <- sort(nndist(ex1_ppp))
y <- seq(0, .99, by=1/49)
plot(csr_df, main="Distances to NE in G Function", xlab = "distance", ylab = "rank", type="n",
xlim = c(0, max(csr_dist)))
for (i in 2:nrow(csr_df)){
segments(x0=0, x1=csr_dist[i], y0=y[i], y1=y[i], col = "grey")
}
m <- round(ex1_ppp$n/2)
segments(x0=-.1, x1=csr_dist[m], y0=y[m], y1=y[m], col = "red", lwd=2)
segments(x0=csr_dist[m], x1=csr_dist[m], y0=-.5, y1=y[m], col = "red", lwd=2)
text(csr_dist[m], y[m], "median", col = "red", pos=3)
csr_dist <- sort(nndist(ex1_ppp))
y <- seq(0, .99, by=1/49)
plot(csr_df, main="Distances to NE in G Function", xlab = "distance", ylab = "rank", type="n",
xlim = c(0, max(csr_dist)))
for (i in 2:nrow(csr_df)){
segments(x0=0, x1=csr_dist[i], y0=y[i], y1=y[i], col = "grey")
}
m <- round(ex1_ppp$n/2)
segments(x0=-.1, x1=csr_dist[m], y0=y[m], y1=y[m], col = "red", lwd=2)
segments(x0=csr_dist[m], x1=csr_dist[m], y0=-.5, y1=y[m], col = "red", lwd=2)
text(csr_dist[m], y[m], paste("median", csr_dist[m]), col = "red", pos=3)
csr_dist <- sort(nndist(ex1_ppp))
y <- seq(0, .99, by=1/49)
plot(csr_df, main="Distances to NE in G Function", xlab = "distance", ylab = "rank", type="n",
xlim = c(0, max(csr_dist)))
for (i in 2:nrow(csr_df)){
segments(x0=0, x1=csr_dist[i], y0=y[i], y1=y[i], col = "grey")
}
m <- round(ex1_ppp$n/2)
segments(x0=-.1, x1=csr_dist[m], y0=y[m], y1=y[m], col = "red", lwd=2)
segments(x0=csr_dist[m], x1=csr_dist[m], y0=-.5, y1=y[m], col = "red", lwd=2)
text(csr_dist[m], y[m], paste("median", round(csr_dist[m], 3), col = "red", pos=3)
csr_dist <- sort(nndist(ex1_ppp))
y <- seq(0, .99, by=1/49)
plot(csr_df, main="Distances to NE in G Function", xlab = "distance", ylab = "rank", type="n",
xlim = c(0, max(csr_dist)))
for (i in 2:nrow(csr_df)){
segments(x0=0, x1=csr_dist[i], y0=y[i], y1=y[i], col = "grey")
}
m <- round(ex1_ppp$n/2)
segments(x0=-.1, x1=csr_dist[m], y0=y[m], y1=y[m], col = "red", lwd=2)
segments(x0=csr_dist[m], x1=csr_dist[m], y0=-.5, y1=y[m], col = "red", lwd=2)
text(csr_dist[m], y[m], paste("median", round(csr_dist[m], 3)), col = "red", pos=3)
csr_dist <- sort(nndist(ex1_ppp))
y <- seq(0, .99, by=1/49)
plot(csr_df, main="Distances to Nearest Event \n in G Function", xlab = "distance", ylab = "rank", type="n",
xlim = c(0, max(csr_dist)))
for (i in 2:nrow(csr_df)){
segments(x0=0, x1=csr_dist[i], y0=y[i], y1=y[i], col = "grey")
}
m <- round(ex1_ppp$n/2)
segments(x0=-.1, x1=csr_dist[m], y0=y[m], y1=y[m], col = "red", lwd=2)
segments(x0=csr_dist[m], x1=csr_dist[m], y0=-.5, y1=y[m], col = "red", lwd=2)
text(csr_dist[m], y[m], paste("median", round(csr_dist[m], 3)), col = "red", pos=3)
1152/96
576/96
96*8
96*14
arb_pt1 <- runif(2)
arb_pt2 <- runif(2)
arb_pt3 <- runif(2)
plot(csr_df, main="Distancesto Nearest Event \n  in F Function")
points(x=arb_pt1[1], y=arb_pt1[2], col="red", pch=4, cex=3, lwd=4)
points(x=arb_pt2[1], y=arb_pt2[2], col="red", pch=4, cex=3, lwd=4)
points(x=arb_pt3[1], y=arb_pt3[2], col="red", pch=4, cex=3, lwd=4)
arb_pt1
nndist(arb_pt1, csr_df)
nndist(arb_pt1, ex1_ppp)
nndist(as.ppp(arb_pt1), ex1_ppp)
nndist(ppp(arb_pt1), ex1_ppp)
nndist(ppp(arb_pt1[1], arb_pt[2]), ex1_ppp)
nndist(ppp(arb_pt1[1], arb_pt1[2]), ex1_ppp)
ppp(arb_pt1[1], arb_pt[2])
ppp(arb_pt1[1], arb_pt1[2])
ex1_ppp
jt <- ppp(arb_pt1[1], arb_pt1[2])
nndist(jt, ex1_ppp)
nndist(rbind(jt, ex1_ppp))
jt2 <- as.ppp(rbind(jt, ex1_ppp))
arb_pt1 <- ppp(x=runif(1), y=runif(1))
arb_pt1 <- ppp(x=runif(1), y=runif(1))
arb_pt2 <- ppp(x=runif(1), y=runif(1))
arb_pt3 <- ppp(x=runif(1), y=runif(1))
plot(csr_df, main="Distancesto Nearest Event \n  in F Function")
points(x=arb_pt1[1], y=arb_pt1[2], col="red", pch=4, cex=3, lwd=4)
arb_pt1
arb_pt1$x
arb_pt1 <- ppp(x=runif(1), y=runif(1))
arb_pt2 <- ppp(x=runif(1), y=runif(1))
arb_pt3 <- ppp(x=runif(1), y=runif(1))
plot(csr_df, main="Distancesto Nearest Event \n  in F Function")
points(x=arb_pt1$x, y=arb_pt1$y, col="red", pch=4, cex=3, lwd=4)
points(x=arb_pt2$x, y=arb_pt2$y, col="red", pch=4, cex=3, lwd=4)
points(x=arb_pt3$x, y=arb_pt3$y, col="red", pch=4, cex=3, lwd=4)
as.ppp(rbind(arb_pt1, ex1_ppp))
rbind(arb_pt1, ex1_ppp)
as.ppp(rbind(arb_pt1, csr_df))
arb_pt1 <- runif(2)
arb_pt2 <- runif(2)
arb_pt3 <- runif(2)
plot(csr_df, main="Distancesto Nearest Event \n  in F Function")
points(x=arb_pt1[1], y=arb_pt1[2], col="red", pch=4, cex=3, lwd=4)
points(x=arb_pt2[1], y=arb_pt2[2], col="red", pch=4, cex=3, lwd=4)
points(x=arb_pt3[1], y=arb_pt3[2], col="red", pch=4, cex=3, lwd=4)
as.ppp(rbind(arb_pt1, csr_df))
rbind(arb_pt1, csr_df)
ppp(rbind(arb_pt1, csr_df))
pt1_df <- rbind(arb_pt1, csr_df)
pt1_df
ppp(pt1_df)
ppp(pt1_df$x, pt1_df$y)
pt1_df <- rbind(arb_pt1, csr_df)
pt1_ppp <- ppp(pt1_df$x, pt1_df$y)
pt2_df <- rbind(arb_pt2, csr_df)
pt2_ppp <- ppp(pt2_df$x, pt1_df$y)
pt3_df <- rbind(arb_pt3, csr_df)
pt3_ppp <- ppp(pt3_df$x, pt1_df$y)
nndist(pt1_df)
nnwhich(pt1_df)[1]
pt_list <- list(pt1_df, pt2_df, pt3_df)
i
i=1
nnwhich(pt_list[[i]]
)
pt_list
pt_list[[1]]
pt_list[[1]][1,]
pt_list[[1]][1]
pt_list[[1]]
pt1_df <- rbind(arb_pt1, csr_df)
pt1_ppp <- ppp(pt1_df$x, pt1_df$y)
pt2_df <- rbind(arb_pt2, csr_df)
pt2_ppp <- ppp(pt2_df$x, pt1_df$y)
pt3_df <- rbind(arb_pt3, csr_df)
pt3_ppp <- ppp(pt3_df$x, pt1_df$y)
plot(csr_df, main="Distancesto Nearest Event \n  in F Function")
points(x=arb_pt1[1], y=arb_pt1[2], col="red", pch=4, cex=3, lwd=4)
points(x=arb_pt2[1], y=arb_pt2[2], col="red", pch=4, cex=3, lwd=4)
points(x=arb_pt3[1], y=arb_pt3[2], col="red", pch=4, cex=3, lwd=4)
pt_list <- list(pt1_df, pt2_df, pt3_df)
for (i in 1:3) {
pt <- pt_list[[i]]
ne <- nnwhich(pt[[i]])[1]
segments(x0=pt[1, 1], y0=pt[1, 2], x1=pt[ne, 1], y1=pt[ne, 2], col="red")
}
it_list[[1]][1]
i
pt
ne
nnwhich(pt)
pt1_df <- rbind(arb_pt1, csr_df)
pt1_ppp <- ppp(pt1_df$x, pt1_df$y)
pt2_df <- rbind(arb_pt2, csr_df)
pt2_ppp <- ppp(pt2_df$x, pt1_df$y)
pt3_df <- rbind(arb_pt3, csr_df)
pt3_ppp <- ppp(pt3_df$x, pt1_df$y)
plot(csr_df, main="Distancesto Nearest Event \n  in F Function")
points(x=arb_pt1[1], y=arb_pt1[2], col="red", pch=4, cex=3, lwd=4)
points(x=arb_pt2[1], y=arb_pt2[2], col="red", pch=4, cex=3, lwd=4)
points(x=arb_pt3[1], y=arb_pt3[2], col="red", pch=4, cex=3, lwd=4)
pt_list <- list(pt1_df, pt2_df, pt3_df)
for (i in 1:3) {
pt <- pt_list[[i]]
ne <- nnwhich(pt)[1]
segments(x0=pt[1, 1], y0=pt[1, 2], x1=pt[ne, 1], y1=pt[ne, 2], col="red")
}
pt1_df <- rbind(arb_pt1, csr_df)
pt1_ppp <- ppp(pt1_df$x, pt1_df$y)
pt2_df <- rbind(arb_pt2, csr_df)
pt2_ppp <- ppp(pt2_df$x, pt1_df$y)
pt3_df <- rbind(arb_pt3, csr_df)
pt3_ppp <- ppp(pt3_df$x, pt1_df$y)
plot(csr_df, main="Distancesto Nearest Event \n  in F Function")
points(x=arb_pt1[1], y=arb_pt1[2], col="red", pch=4, cex=2, lwd=4)
points(x=arb_pt2[1], y=arb_pt2[2], col="red", pch=4, cex=2, lwd=4)
points(x=arb_pt3[1], y=arb_pt3[2], col="red", pch=4, cex=2, lwd=4)
pt_list <- list(pt1_df, pt2_df, pt3_df)
for (i in 1:3) {
pt <- pt_list[[i]]
ne <- nnwhich(pt)[1]
segments(x0=pt[1, 1], y0=pt[1, 2], x1=pt[ne, 1], y1=pt[ne, 2], col="red", lwd=2)
}
pt1_df <- rbind(arb_pt1, csr_df)
pt1_ppp <- ppp(pt1_df$x, pt1_df$y)
pt2_df <- rbind(arb_pt2, csr_df)
pt2_ppp <- ppp(pt2_df$x, pt1_df$y)
pt3_df <- rbind(arb_pt3, csr_df)
pt3_ppp <- ppp(pt3_df$x, pt1_df$y)
plot(csr_df, main="Distancesto Nearest Event \n  in F Function")
points(x=arb_pt1[1], y=arb_pt1[2], col="grey", pch=4, cex=3, lwd=4)
points(x=arb_pt2[1], y=arb_pt2[2], col="grey", pch=4, cex=3, lwd=4)
points(x=arb_pt3[1], y=arb_pt3[2], col="grey", pch=4, cex=3, lwd=4)
pt_list <- list(pt1_df, pt2_df, pt3_df)
for (i in 1:3) {
pt <- pt_list[[i]]
ne <- nnwhich(pt)[1]
segments(x0=pt[1, 1], y0=pt[1, 2], x1=pt[ne, 1], y1=pt[ne, 2], col="red", lwd=2)
}
pt1_df <- rbind(arb_pt1, csr_df)
pt1_ppp <- ppp(pt1_df$x, pt1_df$y)
pt2_df <- rbind(arb_pt2, csr_df)
pt2_ppp <- ppp(pt2_df$x, pt1_df$y)
pt3_df <- rbind(arb_pt3, csr_df)
pt3_ppp <- ppp(pt3_df$x, pt1_df$y)
plot(csr_df, main="Distancesto Nearest Event \n  in F Function")
points(x=arb_pt1[1], y=arb_pt1[2], col="grey", pch=4, cex=3, lwd=4)
points(x=arb_pt2[1], y=arb_pt2[2], col="grey", pch=4, cex=3, lwd=4)
points(x=arb_pt3[1], y=arb_pt3[2], col="grey", pch=4, cex=3, lwd=4)
pt_list <- list(pt1_df, pt2_df, pt3_df)
for (i in 1:3) {
pt <- pt_list[[i]]
ne <- nnwhich(pt)[1]
segments(x0=pt[1, 1], y0=pt[1, 2], x1=pt[ne, 1], y1=pt[ne, 2], col="red", lwd=4)
}
q('no')
install.packages("DT")
library(knitr)
library(emoji)
library(dplyr)
library(DT)
knitr::opts_chunk$set(tidy=TRUE, prompt=TRUE, error=TRUE)
library(dplyr)
names(mtcars)
DT::datatable(
mtcars %>%
select(mpg, cyl)
)
library(knitr)
library(emoji)
library(dplyr)
knitr::opts_chunk$set(tidy=TRUE, prompt=TRUE, error=TRUE)
names(mtcars)
mtcars %>%
select(mpg, cyl) %>%
arrange(mpg, desc(cyl))
names(mtcars)
mtcars %>%
select(mpg, cyl) %>%
arrange(mpg,desc(cyl)) %>%
head()
length(lx)
summary(lm(x~c(5:15)))
q('no')
Sys.Date()
q('no')
library(rnada)
library(nadar)
nadar::widgets_create
q('no')
knit_with_parameters("~/School/Stats/Bayes/Notes/notes-bayes.Rmd")
setwd("~/School/IPR/Rgroup/IntroR/2024_09_13")
library(knitr)
library(emoji)
library(dplyr)
knitr::opts_chunk$set(tidy=TRUE, prompt=TRUE, error=TRUE)
mtcars |> group_by(cyl) |> summarize(mu_hp = mean(hp), n = n())
# create new column named mpg3
new_mtcars <- mtcars %>%
select(mpg, cyl) %>%
mutate(mpg3 = mpg) %>%
case_match(
mpg3,
mpg < 15.5 ~ "very low",
mpg >= 15.5 & mpg < 20 ~ "low",
mpg >= 20 & mpg < 23 ~ "high",
mpg >= 23 ~ "very low",
)
# .default is useful
# create new column named mpg3
new_mtcars <- mtcars %>%
select(mpg, cyl) %>%
mutate(mpg3 =
case_match(
mpg < 15.5 ~ "very low",
mpg >= 15.5 & mpg < 20 ~ "low",
mpg >= 20 & mpg < 23 ~ "high",
mpg >= 23 ~ "very low"
)
)
# .default is useful
# create new column named mpg3
new_mtcars <- mtcars %>%
select(mpg, cyl) %>%
mutate(mpg3 =
case_when(
mpg < 15.5 ~ "very low",
mpg >= 15.5 & mpg < 20 ~ "low",
mpg >= 20 & mpg < 23 ~ "high",
mpg >= 23 ~ "very low"
)
)
# .default is useful
new_mtcars %>%
select(mpg3, mpg) %>%
head(n=12)
new_mtcars |>
mutate(mpg4 =
case_match(
mpg3,
"very low" ~ 0,
c("low", "high") ~ 1,
.default = 2
)
) |>
select(mpg4, mpg3)
